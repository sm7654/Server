<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABKxJREFUaEPtmk2MZFMUxy/6/U91V7WP8RVEsBSCiCULifhuXzushdX42NgIEhsR
        K4mvraUl6cFmKma67q0aRUbSZsaYITFWglgZPWRa/rfPfcrRXfXqfXRXmF9SSXX9z3vvnnfPPffec9u5
        M/zPCCIDDwT7+0yx7tzZAXjAi+zxwLtWJ0FknR/7O/HAe15k2QNLvJfVG2fVOXjgWQ98mxrqRb6ydmSC
        I8fz64HjHnhm6Fxm7Rqh32rdxkaPOHCUDeg7d661JeMcGTp3Hq8NwDcj91sNrdat1rY29jgnAXjHi5zW
        hx4OwL2TQmKcIwneowfcH0SOqDOnPfAWe97aVmK/cxd4oKsPOeVFXqVj1m4zijiSYFgF4PkgcjJeB6wM
        O52LrF0p+iLX5G8K+L6fZTdam3FM40hiJctu8sCJvOdFrrY2U+Gd2zXS3V8eaLWutDaTKOMIGS4sXOZF
        hskZRoW1KYRmphROw65zHWtThLKOkBXnFoPIFxoNe0uNmQC8ncJpZX7+cqsXpYojxM/PX5HCjAnA6mPR
        FMvsdHLaMWGp6gjhmGFbYpuKpuYYUmmeAF6w+rTU4QjxwEsa5quFJs0APKcXHCoVk4a6HInzmCaeADxt
        9X/wvnPneOA7Nb7H6mWoyxGik2ZczoydiHvAQ9obR9edO8vqZajTEbZpZE5bsnpOAD7W3thttbLU6QiJ
        a7ONNn5ktcjQuQUvshZE/ug6d77Vy1K3I2wb28i2ss1Wd17kDn3owGpVqNsR4kU+4z37IrdbjeIr+tDX
        rFaFhhx5Xe/7stUYe59EL4EHrVaFJhxJSWnTccJMRdFn2c1Wq0ITjgzm5m7R+x62Gh35lWKv1brKalVo
        whG2Ue/7i9XoyCmKm2aCCjThCNsYo0dkzWp0hKl3vY5lySge2O+Bffb3KuhyhS/od6vxzf0cvXRul9Vm
        jX2dzsU62H+0Wj7YA3Ct1WaNQZZdpz1yxGp0ZJli3em3CQLwiDrygdXyScYDL1pt1uBEqI78e/LOV77A
        XqvNGgH4lG3lst5qsXYVRP5kJqhz0Vg3TEZpcbtVdTNfpgSRJ6w2K3iRp3QOWbZajs+yx9VoaLVZQDdW
        sTzUy7JHrZ6j9d0foqHIXVbfaUa2uicmlmxT8YGecw9v9Z2i69wcq506103ewXadawXgmF4wvlqxjYxU
        d76e2BsJVlC0V34LWXaD1bebVKBjm/oid1p9LB54M72BweLihVbfLuK6Kh0EAW9YfSIMsbQ39kD/oHNt
        a9M0LJyzhqDRMSgcUhZdZW5U90QO8G9r0xTxSAPoaU8cC+32pdZmKuJBj3Ytw6xqUbsIcUz8/Uyuyqsd
        9CT4NlKYMQGwSMZ0aO2qwntqdto4ehMZ9NrtS6xdJeKY0QSgb+pgXfVhzth94L58ntCBXXpMFMGL3D16
        nBxEPvciT5Y5GtMFINdOcdmRQmnqFFsW7R2ej8fljDZgjctrnmN44GHu4pi2WQPgh997WXY9N0XxrIO2
        WieI1/NUCtjdaC9sBR/qs+wxFsp0C5B6qeiHNdxlLgB3xIHN0P9iWOKuLYh8yOKZB37iW4+fje+HuD2l
        DW233E+c4T/AXyfao19H1ZlmAAAAAElFTkSuQmCC
</value>
  </data>
</root>